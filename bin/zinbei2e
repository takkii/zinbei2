#!/usr/bin/env ruby
# frozen_string_literal: true

# vim: filetype=ruby

lib = File.expand_path('lib', __dir__)
$LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)

# Feature Zinbei2
module Zinbei2
  module_function

  def version
    require 'zinbei/version'
    print Zinbei::VERSION
    puts ' : [zinbei2_future_version] '
  end

  def tomoshibi
    require 'zinbei/ronri'
  end

  def sava
    require 'zinbei/scom'
  end

  def night
    require 'zinbei/word'
  end

  def key
    require 'zinbei/maker'
  end

  def iruka
    require 'zinbei/write'
  end

  def rice
    require 'zinbei/suihan'
    require 'zinbei/kome'
    require 'zinbei/rice'
  rescue SystemCallError => ex
    puts ex.backtrace
  rescue IOError => ee
    puts ee.backtrace
  rescue Exception => e
    puts e.backtrace
  rescue Errno::ENOENT
    puts '読み込みファイルを指定してください'
  rescue Errno::EACCES
    puts 'ファイルへアクセス権限がありません'
  rescue LoadError
    puts '対象ファイルがありません'
  ensure
    puts ''
    puts '形態素解析を終了します...'
    puts ''
  end

  def rantan
    require 'zinbei'
  end
end

include Zinbei2

v = /\A[-][v]\z/
t = /\A[-][t]\z/
s = /\A[-][s]\z/
n = /\A[-][n]\z/
k = /\A[-][k]\z/
i = /\A[-][i]\z/
r = /\A[-][r]\z/
e = /\A[-][e]\z/

one = ARGV[0]

if one.nil?
  soft
elsif one.match?(v)
  require 'zinbei/ika'
  version
elsif one.match?(t)
  tomoshibi
elsif one.match?(s)
  sava
elsif one.match?(n)
  night
elsif one.match?(k)
  key
elsif one.match?(i)
  iruka
elsif one.match?(r)
  rice
elsif one.match?(e)
  rantan
else
  puts 'Please choose an option.'
end

__END__
